게임 서버 프로그래밍 (03/07)
	원성연 (2013182027)

온라인 게임서버 배경 지식


1. 게임서버 그러면 닥치ㅗ 서버프로그램 만들면 되는가? 그러진 않고 확실히 그렇게 해도 되는데, MMO게임서버에서 많이 활용되는 용어들이 있어요, 여러분이 만든 게임서버가 어떤 구성을 가져야하고, 그런거를 살표보도록 하겠어요.
그러고 게임서버를 만들기 ㅜ이해서는 일단 커퓨터가 있어야 겠죠, 게임 서버에 사용되는 하드웨어는 어떠한 하드웨어와 소프트웨어를 가져야하는가,

서버에서 게임서버로 활용되는 컴퓨터는 일반 데스크탑이 아니라, 특수 대용량 하드웨어가 필요하고, 도대체 어떤 하드웨어가 대 하드웨어인가 확인을 해요..


2. 게임 서버의 분류
	크게 2가지로 나눌 수 있음.

	- 로비 서버(for MOG) 
	: 일반적으로 작은게임에 쓰이는 로비서버, 어떤 게시판같은 데에 들어가서 실제 게임을 학 ㅣ전에 같이 플레이할 사람을 찾고, 방을 만들고, 어? 팀원이라 그러나? 방원? 방 멤버들을 모아서 방인원이 꽉차면 게임을 시작하고, 이를 로비서버라고 그래요
	그래서 MMO가 아닌 경우, 방 만들고 같이 게임을 하고, 이런 경우가 되게 많죠?, LOL, 오바와치, 배그 같은 것도 게임에 접속하자마자 총질하지 않죠?? 방 만들어야해요, 어디서 할껀지 선택해야 하고, 길드나 클랜 아이템... 게임안에서 현질하지 않아요.!
	채팅서버로 시작했고, 랭킹 같은 것도 볼 수 있죠? 로비 서버의 특징은 실제 게임은 로비서버에서 하는 것이 아니라, P2P로 이루어짐.(요즘은 이 구조에서도, P2P에서 CS로 모두 구현하는 추세에요.)

	심지어 이런 게임은 싱글 플레이 모드도 지원함, 싱글 플레이 모드도 Client/Server로 구현하는 경우도 있는데, 이거 혼자하는 것도 안돼요... 왜그렇게 했나 모르겠는데, 싱글 플레이 결과가 멀티플레이에 반영될 경우 그럼...!!

	여러분들이 졸작할때, FPS, AOS 같은 거 할때는 로비서버로 만들어야 겠죠?? 근데 우리는 이런거 하는 거 아니라고 했죠, 우리는 MMOG 서ㅓㅂ를 하는 ㅓㄱ랫죳.

	- MMOG 서버
	: MUD서버가 효시, 그래픽이 붙어서 지금의 게임이 됨(바람의 나라 최초 - 3D 비슷하게 확장한게 리니지고, Full3D는 리니지 2)
	게임 콘텐츠가 다 서버에 있고, 서버의 부하가 크기 때문에 잘 해야하고, 이번학기에는 이거 함.


3. 게임 서버의 설계 목표 (안정성, 성능)
	- 쾌적한 게임 환경
		1. 렉없는 서버, 안정적인 서버(섭다X)....!
	- 동접
		1. 게임성 - 경제시스템, 커뮤니티
		2. 서비스 비용 절약

	- 핫스팟
		1. 게임 컨텐츠 제약 완화 

그래서 부하가 많이 걸려도 렉없고 죽지않아야하는데,
	1. 프로그래밍을 잘해서 잘 죽지 않아야한다!! 다만 너무 뻔하고 이거로 한계가 있음. 더이상빨라질수 없는 한꼐가 존재함...! 결국 이거로만은 불가능함.
	2. 부하분산 ( 여러대의 컴퓨터 )

PC속도 1. 클럭속도, 2 코어 개수!
	1. 서버는 오버클럭하면 잘 죽음...! 오버클럭하면 안돼요!! 안정적으로 오버클럭하려면 물로해도 안되고 액체질소 -> 오바야 너무 비쌈....!
	2. 코어 개수,, 서버는 32코어까지 나와있음...! 인텔 176개의 코어까지 나와있음...! -> 더이상은 만들수 없음 인텔이 그런거를 만들지 않음.

그래서 부하분산이라는 것은 ( 요즘 나오는 게임은 다 컴퓨터 여러대로 서비스함 -> 예전게임(리니지)는 컴퓨터 한대로 충분함...! 컴퓨터 1대로 서버 4개도 돌림ㅎㅎㅎㅎㅎ )
	1. 서버 분리 (샤딩, Sharding)
	2. 기능별 분산
	3. 공간 분할 (월드 분할)

	1. 서버 분리
	샤딩이라는 단어는 울티마 온라인에서 처음 나온 단어로, 울티마라는 게임을 많이 팔았는데, 울티마 온라인이라고 나오는데, 생각을 해보니까 동접이 몇천(1~2000) 밖에 나오지않는데, 하고싶은 사람은 수만명... 그래서 쉐딩을 했음..!
	최종 보스 악당 마법사가, 전체월드를 수정구슬에 모아서 관리하고 있었는데, 이거를 깨트려서 조각하나하나가 스토리를 갖고 있었다...!
	우리나라에서는 샤딩이라는 단어를 안쓰는데, 외국은 샤딩이라는 단어 많이 씀! 서버를 분리하는 것을 샤딩이라고 함.!!! 

		서버 고르는 법....ㅋㅋㅋㅋㅋ
			1. 친구가 있는 서버
			2. 접속자 수가 혼잡인 서버 (도시 서버) - 아즈샤라...ㅎ --> 쾌적하다는 것은 사람이 없다는 거고 재미 없다는 뜻.

	워륻 복사 & 분리, 다른 월드로 이동 불가, 지형 몬스터등 모든 게임 콘텐츠는 완전히 동일함!, DB가 분리되어 있음!, 다른 월드로 이전할 수 없음...!(이런거 쉽지가 않음... 블리자드도 4일...ㅎ 리니지2 레볼루션은 이런거 안하져! 왜안하는지 모르겠는데 돈마블이!)
	
	서버 하나가 감당할 수 있는 인원이 제한있기 때문에, 어쩔 수 없는 일!
	서버 하나 더 사서 exe 복붙하면 끝! 기술적으로 어려운 일이 없음!

	문제 : 시골서버 vs 도시서버, 시골서버가 딤져도, 할 수 있는게 없음...
		그렇기 때문에, 공동 경매장, 공동 인던 입장, 서버간 결투, 공동 Zone...! (블리자드가 구현함... 우리나라는 제한적으로 구현함)

	그래서 거의 대부분의 MMORPG가 서버 분리를 적용하고 있고, 문제는 뭐냐, 서버간의 밸런스가 맞지 않는 것. 그러나 백퍼센트 만족할 수 없음!!


	2. 기능별 분산
		- 사용자 분리가 아닌, 기능별로 분산을 하자, 부하가 크기 때문에 여러 종류의 서버의 조합으로 구성하자.
		- 대부분의 MMO Server가 이정도 분리는 함.

		Main Server

		Login Server (Auth Server)

		AI Server (NPC Server)

		DB Server, Query Server (Cache Server)
		
		단점 : 서버를 돈만 있으면 늘릴 수 있는 샤딩과 다르게, 서버를 너무 쪼개면, 계산 부하는 쭐어들 수 있는데, 데이터 주고 받을 때 커뮤니케이션 오버헤드가 있음! 커뮤니 케이션도 소켓으로 해야하는데, 패킷 오버헤드가 너무 큼!
			너무 조개는 거는 오히려 오버헤드가 있을 수 있다는 것을 명심해야함! 2만 3만을 하기위해서는 3번을 해야하고 5천 8천 정도는 이정도로 가능

		한계 : MainServer에서 부하가 집중되면, 듀랑고나 마영전 사태가 벌어짐... 잘한다는게 너무 힘듬... 

		여기서 포기하지않고, MainServer의 부하 감소를 위한 분할.

		공간 분할 : Zone Server!!!!

		이거는 기획 단계에서부터 처음부터 설계를 잘해야함. 새로운 세상에서 게임을 하는데, 지도를 보며는 동그랗게 생기지 않고, 복잡하게 생겨있음...! 여러개의 대륙이 존재하는데, 각 공간분할을 하기위해서 여러가지로 분할함.
		Portal방식과 Seamless 두가지 방식이 있다.

		샤딩하고 다른게 이거는 이동이 가능함. 포탈방식은 배나 비행기를 타고 이동이 가능함... 잠깐 접속이 끊어졋다가,(로딩화면, 시간이 걸림)
		근데 심리스로 구현할 수 있는데, 배나 비행선타고 가는데, 끊김없이 바다를 날아가서 가고, 수영해서 가는 것도 가능한데, 또는 대륙을 반으로 쪼개서 ㅜㄷ개로 나ㅜ니어져서 로딩없이 가고, 여기... 빅어ㅜㄹ드??가 뭐지?? 심리스가 쉽지 않음!!
		
		리니지는 공간분할 안함...! 

		근데 와우보다 동접 높음.. 리니지가 와우보다 서버 기술이 훨 노ㅠㅍ음!!! 에헤헤헿ㅎ

		처음부터 월드를 공간분할을 생각해서 만들어야하고, 접속분할!!
		접속 분할 : Duplicate Server(채널링)

		동일한 공간의 Clone를 만들어서 각각 다른 서버가 관리, Mu(수동), Guild War(자동) - 샤딩과는 다르다.
		Server를 여러개 두고, DB를 1개만 사용! 채널링!!이라고 함!! DB가 부하됨!!!!!!DB가 버틸때까지 분할해야함.. DB가 간다아아아아앗!!!!

			접속 분할의 문제는, 친구 만나기가 힘듬, 커뮤니티 활성화가 힘들다...! 사냥터에서 같이 사냥하다가 애기를 하다가 친구가 되고, 또 같이 적대진영하고 싸우다가 친구가 되고, 마을에서 상거래하다가 친구가 되고 하는데! ( 접점이 있어야하는데,
			다른 채널에 있으면 보이지 않아요! 다른 채널에 이씅면 사냥도 몬스터가 다르기 떄문에 커뮤니티 활성화가 아노디요.... 왔다갔다도 로그아웃하고 재접해야하고 힘듬...!!

			이런 방식으로 구현한 게임 뮤하고 길드워가 이런 방식으로 구현되어있음 ( 뮤는 서버를 고를 수 있음, 길드 워는 자동으로 들어감)

			극복!! 파티를 맺으면 이서버에서 저서버로 이동을 시켜줌...!1 내주변의 사람들이 사라지고, 새로운 사람들이 딱!!! 나옴!!!

			수동으로 하면 시골채널, 도시채널이 생김!!!!,  		


		정적 분할은 기획단꼐에서 자르는 것이고(4개의 대륙이니까 4개의 서버에서 서비스하자,,,), 
		동적분할은 굳이 대륙을 잘라야하는가 전체월드가 있을때,반으로 뚝 잘라서 서비스ㅡ하자, 사람이 많이몰리고 저기많이 안모리면 경꼐선을 어디로 옮기는게!!!!  
			동적분할 겁나 어렵겠죠??? 나는 이런거는 못함.....ㅎ
		동적분할을 잘 구혀낳면, 서버 두개로 하고 있었는데, 서버 하나 추가하고, 엥 사람이 없는데 서버를 줄이자!!!

		심리스에 동적분할을 구현한 것은 빅월드밖에 없음....!


게임 서버를 위한 하드웨어, 소프트웨어....

	하드웨어 지식이 필요한 이유...
		- 어떤 서버 컴퓨터를 사서, 어떻게 설치할 것인가.. 어떻게 관리할것인가... 기획팀장? 그래픽 팀장? 클라팀장??? 다못햌ㅋㅋㅋㅋㅋ사장ㄷ ㅗ못하고 ㅎㅎㅎㅎㅎㅎㅎㅎㅎㅎ	

	화장실 다녀옴!!! ㅠㅜㅠㅜㅠㅜㅠㅜㅠ


	///
	다망하고 인텔,  AMD, IBM, 이렇게 있는데, AMD 쓰면 안되고, IBM비쌈....!!
	인텔이여도, 모바일 안되고, 

	예) Intel Xeon, AMD EPYC 등을 사용해야함!!! 서버용 CPU가 따로 존재한다.

	코어 하나의 속도는 같은데, 전체 CPU를 구성하고 있는 것들이 크게 다르기 때문,,,, 이것들은 가격이 비쌈.. 5배에서 10배정도 가격임.

	64비트 - 멀티 코어

	- 속도와 cache크기, 메모리 Bus대역폭이 더 넓음, 멀티 CPU가 되기 때문에

	//
	서버용 CPU는 멀티 프로세서를 지원함.. (데스크탑 CPU는 안됨!!) - Cache 동기화 지원!
	그렇기 때문에 서버용 PC는 PC가 느리다! 고러면 CPU 추가로 사서 꽂으면 됨!! 최대 8개까지 꽂을 수 잇음!! 그 이상은 안됨!( 인텔에서 아직 안만듬 - 이게 한계) , 에펙은 2개가 한계!

	제온과 i7의 차이...

	서버는 서버용 메인보드가 따로 있음! 인텔이 그럴 줄 알고, 핀 배열이 다름... i7을 Xeon대신 못씀... 물론 핀배열 같아도 어짜피 못씀!! (cache 동기화를 지원하지 않음)
		Cache 동기화는 , Cpu가 있고, CPU가 이씅면 메모리를 두개의 CPU가 공유하는데, 이 메모리의 동기화가 일반 CPU에서는 안되고, 서버용 CPU만 지원됨!!! 이를 cache 동기화라고 함! (제온은 있고, i7은 없음)

	
		따라서 서버용 CPU에서는 각 CPU간의 캐시를 연결해주는 고속 데이터 전송 전용 통로를 제공함. 2017년 부터 인텔은 1초에 6TB....???? 까지 지워노딤?? 미친?? 6TB???

		메인보드를 사면 CPU가 있고, 메모리 슬롯이 있는데, 메모리 슬롯이 4개 인데, 그런 회사가 하나도 없음... 이 Ram의 슬롯의 개수는 CPU가 정하는 것. CPU에서 나오는 핀이 4개밖에 없다! 그러니 4개밖에 램을 못꽂는 것!!
		Xeon CPU 같은 경우 램을 8개까지 꽂을 수 있음...! 8개가 있으면 메모리 Bandwith가 늘어나고 통로가 늘어나기 때무네 그럼.

	하드웨어를 왜 알아야하는가... 이런 하드웨어에 따라 확 성능, 동접이 달라짐! 존나 멋있어 미친

	///

	64비트 이슈

	- OS와 Compiler도 64비트 버전을 사용해야함!!

	- 64bit가 한 2005년 쯤에 나왔는데, 이전 32bit일 때, 램 4gb를 못넘음... 리니지가 확장팩을 내려고했는데, 램 제한때문에 서비스를 못했었음...! 64bit가 나온 이후, 확장팩을 적용함.
	- 리니지 2 레볼루션... CPU가 부족해서 동접을 못받지, 메모리가 부족해서 못받는 경우는 이제는 없음....ㅎ
	- 포인터 변수를 인트로 형변환해서 사용하던 짓을 이제는 못함...! 와씨 이런거도 되네 미쳣네미쳣어
	
	//

	멀티 프로세서
		- SMP (Symmetric Multi Processing) 컴퓨터 -> 모든 CPU가 모든 메모리를 ㅣㄺ고 쓸수 있다.! 평등하다!!
		- 빠른 네트워크 응답속도와 처리 속도 개선을 위해 멀티 프로세서를 사용.

	멀티 코어
		- 코어의 속도를 더 높일 수 없기 때문에, (발열 이슈), 개수를 늘림!!
		- 앞으로 코어의 개수가 늘어날 예정임... 대학원 병렬언어, 고급 멀티쓰레딩 프로그래밍, 병렬 이슈

	멀티 프로세서와 멀티 코어의 차이점
		- 소프트 웨어 적으로는 차이가 없음( 쿼드 코어 프로세서 VS 멀티코어프로세서 2EA) -> 차이가 없음.
		- CPU 개수 만큼 메모리 대역폭 증가.
		- 하드웨어적으로는 메모리 접근 시 성능 차이가 존재.
		- NUMA 문제...!(하이 레벨 문제) 어떠한 CPU가 메모리를 읽을 때, 다른 CPU에 존재하는 메모리를 읽을 경우 2배정도 늦음....! 그렇기 때문에 CPU가 자신의 메모리만 읽도록 프로그래밍을 해야함.

	//
	교수님 돈없으셔서 AMD CPU 못사심....ㅠ


	//
	CPU 발전의 Trend

	- 클럭속도 증가
		: 반도체 생산 공정 개선
		: 한꼐에 부딪침 : 발열...!
		: 처음 19년 500배, 지금 19년 1.7배....ㅎ

	- 클럭 당 수행되는 명령어의 개수 증가..
	
	--> 이제는 코어 개수를 증가!

		128 PCI Lanes는! 1080ti를 8개 꽂을 수 있음...!  와우!


	//
	파이프라인의 발전
		- 파이프라인은 꽉차서 돌아가면 몇 배의 성능이 나오는데, 메모리가 느려서 메모리가 Read가 계속 딜레이 되면 계속 느려지는 문제,, 명령어가 더 많아도 메모리 Read가 적으면 더 빠름.....!!!
		- 메모리 Read를 적게 프로그래밍 하라! 성능을 위해서라면!
	
	//
	SIMD의 발전		
		- 게임서버와는 별 사오간없죠???

	//
	파이프 라인을 리셋시키면 손해가 너무 크다...! 
		- 시스템 콜, 분기 예측 오류, 이넡럽트 - Exception 안해야함!!!

	// CPU속도, 코어의 개수 중요하고, 메모리를 읽게 되는거!!
		- 같이 쓰이게 되는 데이터는 묶어 놓는다.
		- 루프 안에서 사용하는 데이터는 캐쉬에 다 올라올 수 있도록 한다!!!(캐시 미스가 나지 않도록 한다!!! 데이터 하나하나의 사이즈를 줄이거나, for문을 줄여야함!)
		- int 대신에 short나 char, 비트를 사용한다. (int를 니맘대로 쓰지마!) -> 레벨 -> char(100안되면), short( 60000을 넘지않는다면!!) 메모리 소중한거를 알아라!! 성능을 위해서라면!!!

	// 멀티 프로세서 프로그래밍 혹은 멀티 쓰레딩 프로그래밍을 해야함!
		- 잘하면 N배 성능 향샹, 못하면 성능 하락
		- Lock을 줄여라...!
			1. Lock으로 보호 받는 코드는 N배 성능향샹에서 예외(크리티컬 섹션)
			2. Lock 자체 부하 : 버스 Locking
			3. 세마포어, 컨디션 변수는 시스템 call, 개느려요...
		- 캐시 쓰레싱에 주의하라!!!
			- 캐쉬는 라인 단위로 움직임.

		게임서버 만들때 멀티 프로세서 프로그래밍을 하는데, 어떠한 한 데이터는 하나의 코어에서 작업하도록!! 코어를 왔다갔다하지않도록!!!! 
		int i, j를 선언할때, i와 j가 같은 캐쉬 라인에 들어가기때문에, i는 어디, j는 어디이기 때문에, 캐시 cache Thrasing이 발생함...!

	// 최근 CPU 구조를 알고 싶으면!
		udteam.tistory.com/57

	
	게임 서버 하드웨어는 제온 PC를 써야한다. 안그러면 동접이 안나온다! 그러면 게임이 망한다라고 말해랏!

/////////////////////////////////////////////////////

	메모리도 서버용 메모리가 따로 존재함...!
		일반적인 데스크탑용 메모리가 아니라, error수정기능이 있는 특수 메로기를 사용한다. (ECC - Error Correcting Code - 에러 수정 코드. 알아서 에러를 고치는 메모리.) 
		대역폭이 크지만 사용 속도는 느리다!!

		메모리가 있으면 데이터가 저장이 됨.
		컴퓨터가 켤때, 하루하루 메모리 비트가 한두개씩 바뀜.... 불량이냐? 아님.. 지구는 방사성에 폭격을 받고 있음... 그래도 방사능이 계속 떨어지고 있음..(과천 과학관에 가면 방서선이 떨어지는게 보임...와우, 땅바닥에서는 방서선이 계속 올라옴)
		감마선이 메모리를 때리면 얘가 회까닥해서 메모리 바이트가 바뀐는 경우가 생김... 갑자기 죽음!!!
		--> 여러분 컴퓨터에 있는 데이터 보통 멀티미디어 데이터! , 사진 동영상의 한픽셀 휙 바껴도 의미없어!!! 다만 서버는 아니지!!! 서버는 고냥 딤져버릴 화귤이 높거나, 데이터 변절이 가능할 수 있음.

		그래서 패리티 비트를 한 개씩 둠. (에러인지 아닌지 알 수 있음...!), 여러비트를 둬서, 누가 바꼇는지 알 수가 있음. 이를 통해 극복해냄!!! ( 두비트가 동시에 틀어지면 답이 없음.... )

	서버는 10GB 네트워크 카드를 두개를 꽂아서 사용함!!
	10GB가 느리면, Infiniband를 사용함...! 300gbr/s...! -> 아직까지 이거 사용하는 곳없음ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ

	